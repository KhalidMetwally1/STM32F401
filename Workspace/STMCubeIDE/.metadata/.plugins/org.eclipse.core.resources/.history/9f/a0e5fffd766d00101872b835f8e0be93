/*
 * HSSD_program.c
 *
 *  Author: Khalid Metwally
 *   Layer: HAL
 *	   SWC: HSSD
 */
#include "STD_TYPES.h"
#include "BIT_MATH.h"
/* MCAL */
#include "MGPIO_interface.h"
/* HAL */
#include "HSSD_interface.h"
#include "HSSD_config.h"
#include "HSSD_private.h"

static u8 Local_u8SSDNumbers[10] = SSD_NUMBER_ARR ;
/*==============================================================================================================*/
/*
 * Brief : This Function initialize the port which connected to 7 Segment as output pins ( 8 Pins )
 * Parameters :
 	 	 	=> structure has the SSD type , data port and section, output type, speed and enable(port & pin)
            =>Copy_u8PORT --> Port Name [ SSD_PORTA ,	SSD_PORTB , SSD_PORTC ]
 * return : void
 */
void SSD_voidInitialDataPort  ( SSD_Type Copy_SSDConfig )
{
	MGPIO_voidSetPortDirection		(Copy_SSDConfig.DataPort, Copy_SSDConfig.DataSection, OUTPUT);
	MGPIO_voidSetOutputPortConfig	(Copy_SSDConfig.DataPort, Copy_SSDConfig.DataSection, Copy_SSDConfig.OutputType, Copy_SSDConfig.Speed);
}
/*==============================================================================================================*/
/*
 * Brief : This Function write Number on 7 segment [ 0 : 9 ]
 * Parameters : => structure has the SSD type , data port and enable(port & pin)
 * return : void
 */
void SSD_voidSendNumber       ( SSD_Type Copy_SSDConfig , u8 Copy_u8Number )
{
	if( Copy_SSDConfig.Type == SSD_COMMON_CATHODE )
	{
		MGPIO_voidSetPortValue (Copy_SSDConfig.DataPort, Copy_SSDConfig.DataSection, Copy_u8Number);
	}
	else if( Copy_SSDConfig.Type == SSD_COMMON_ANODE )
	{

	}
}
/*==============================================================================================================*/
void SSD_voidEnable           ( SSD_Type Copy_SSDConfig );
void SSD_voidDisable          ( SSD_Type Copy_SSDConfig );

